name: Python Distribution

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        platform: [x64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Set up MSVC x86
      if: matrix.os == 'windows-latest' && matrix.platform == 'x32'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Set up MSVC x64
      if: matrix.os == 'windows-latest' && matrix.platform == 'x64'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install dependencies
      run: |
        pip install setuptools wheel

    - name: Build distribution ðŸ“¦
      shell: bash 
      run: |
        if [ ${{ matrix.platform }} == 'x32' ] && [ ${{ matrix.os }} == 'windows-latest' ]; then
             cd bindings/python && python setup.py build -p win32
        elif [ ${{ matrix.platform }} == 'x32' ] && [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
             docker run --rm -v `pwd`/:/work dockcross/manylinux1-x86 > ./dockcross
             chmod +x ./dockcross
             ./dockcross bindings/python/build.sh
        elif [ ${{ matrix.platform }} == 'x64' ] && [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
             docker run --rm -v `pwd`/:/work dockcross/manylinux1-x64 > ./dockcross
             chmod +x ./dockcross
             ./dockcross bindings/python/build.sh
        elif [ ${{ matrix.platform }} == 'x32' ] && [ ${{ matrix.os }} == 'macos-latest' ]; then
             cd bindings/python && python setup.py sdist
        else
             cd bindings/python && python setup.py build
        fi

    - uses: actions/upload-artifact@v4
      with:
         path: ${{ github.workspace }}/bindings/python/dist/*
         name: artifact_${{ matrix.os }}

#
# NOTE: this repo does not need to publish Keystone to PyPI
#
#  publish:
#    needs: [build]
#    runs-on: ubuntu-latest
#    if: startsWith(github.ref, 'refs/tags')
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: dist
#
#      - name: Publish distribution ðŸ“¦ to test PyPI
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          user: __token__
#          password: ${{ secrets.testpypi_pass }}
#          repository_url: https://test.pypi.org/legacy/
#
#      - name: Publish distribution ðŸ“¦ to PyPI
#        if: ${{ success() }}
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          user: __token__
#          password: ${{ secrets.pypi_pass }}
#